"""
9. Reverse ip lookup
Reverse IP Lookup - это способ идентификации имен хостов, имеющих записи DNS
(A), связанные с IP-адресом. То есть показывает все хосты находящиеся на одном
IP.
На одном IP-адреса может находится множество доменов/веб-сайтов. Это
обычная практика у хостинг компаний которые используют так называемый общий
хостинг (Shared Hosting).
Собранная информация может быть использована для расширения зоны
атаки при выявлении уязвимостей на сервере.
"""
import requests
import re


def validation():
    ip_pattern = r'(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'
    domain_pattern = r'https?\:\/\/([\d\-_.~a-z]+\.[a-z]{2,})'

    link = input('Enter IP or domain: ')
    x = re.findall(domain_pattern, link) or re.findall(ip_pattern, link)

    while not x:
        print('\nPlease enter a correct IP-address or domain name!\n')
        link = input('Enter IP or domain: ')
        x = re.findall(domain_pattern, link) or re.findall(ip_pattern, link)
    else:
        return x


def ip_lookup():
    host = validation()
    url = "https://domains.yougetsignal.com/domains.php"
    payload = {"remoteAddress": host, "key": "", "_": ""}

    try:
        res = requests.post(url, data=payload, headers={
            "User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) "
                          "Chrome/65.0.3325.181 Safari/537.36"})
        api = res.json()
        results = []
        if api["domainCount"] == '1':
            results.append(
                f'Found a domain hosted on the same web server as {api["remoteAddress"]} ({api["remoteIpAddress"]}).\n')
        else:
            results.append(
                f'Found {api["domainCount"]} domains hosted on the same web server as {api["remoteAddress"]} '
                f'({api["remoteIpAddress"]}).\n')
    except KeyError:
        return f'\nYour IP or domain {host} is invalid!'
    except Exception as e:
        return f'\n{host} ERROR --- {e}'
    else:
        for lst in api.get("domainArray", []):
            results.append(lst[0])

        return '\n'.join(results)
