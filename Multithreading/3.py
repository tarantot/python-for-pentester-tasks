"""
Перепишите задание 1 и задание 2 в ООП стиле используя наследование класса
Thread.
"""

"""Задача 1"""

import os
import threading as t


class Task1(t.Thread):
    def __init__(self):
        super().__init__()
        print('Привет Бро! Я занял первое место в конкурсе!')
        self.picture = t.Timer(5, self.pic)

    def pic(self):
        os.system('eog /home/tarasr/Desktop/PythonAdvanced/nb.png')

    def run(self):
        self.picture.run()


tr = Task1()
tr.start()

"""Задача 2"""

import threading as t

x = 500000


def plus():
    global x
    x += 1


def minus():
    global x
    x -= 1


def thread_task1():
    with lock:
        for _ in range(500000):
            plus()


def thread_task2():
    with lock:
        for _ in range(300000):
            minus()


def main_task():
    global x
    x = 500000
    t1 = t.Thread(target=thread_task1)
    t2 = t.Thread(target=thread_task2)
    t1.start()
    t2.start()
    t1.join()
    t2.join()


class Task2(t.Thread):
    def __init__(self):
        super().__init__()
        print('Start of the process...\n')
        self.task = t.Thread(target=main_task)

    def run(self):
        self.task.run()


task2 = Task2()
lock = t.Lock()
for i in range(1, 11):
    x = 500000
    main_task()
    print('Iteration {0:>2}: x = {1}'.format(i, x))
print('\nDone!')