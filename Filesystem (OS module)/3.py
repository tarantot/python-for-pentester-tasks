"""Используя модуль argparse напишите программу, которая будет запускаться с
нижеперечисленными ключами. При запуске без ключей выводится справка.

Ключи:
-s, --system
Даёт возможность вводить системные команды в неограниченном количестве.
При вводе команды exit вывести сообщение The work was completed! и сделать
выход из программы.
При вводе несуществующей команды вывести Wrong command, exit! и выйти из
программы.
При вводе правильных команд НЕ выводить код возврата 0.

-c, --chmod
Проверка прав директорий/файлов в неограниченном количестве. Вывод прав в
восьмеричном представлении без префикса.
При вводе команды exit вывести сообщение The work was completed! и сделать
выход из программы.При вводе несуществующего файла/директории, вывести The file or directory does
not exist! и продолжить работу.

-t, --tree
Выводит содержимое указанного каталога в виде дерева, и записывает в файл
неограниченное количество раз. Имя файла wood_** где вместо звёздочек
название каталога. Например если путь будет такой
/root/PycharmProjects/education/pro_2 то название будет wood_pro_2
При вводе команды exit вывести сообщение The work was completed! и сделать
выход из программы.
При вводе несуществующей директории, вывести The file or directory does not exist!
и продолжить работу."""



import argparse
import os
import stat
import subprocess

parser = argparse.ArgumentParser(description='System Management Program', usage='Script option')

parser.add_argument('-s', '--system', help='System command')
parser.add_argument('-c', '--chmod', help='Checking access rights')
parser.add_argument('-t', '--tree', help='Directory tree')

args = parser.parse_args()


class Task3:
    def system(self):
        while (inp1 := input("Введите команду")) != "exit":
            process = subprocess.Popen(inp1.split(), stdout=subprocess.PIPE)
            print(process.communicate())
            if 'no such file or directory' in process:
                print('Wrong command, exit!')
                break
        else:
            print('The work was completed!')

    def chmod(self):
        while (inp2 := input('Please insert the name of a file or a directory: ')) != 'exit':
            print(oct(stat.S_IMODE(os.lstat(inp2).st_mode))[-3:])
            if 'no such file or directory' == oct(stat.S_IMODE(os.lstat(inp2).st_mode)):
                print('Wrong command, exit!')
                break
        else:
            print('The work was completed!')

    def tree(self):
        while (inp3 := input('Please insert a directory: ')) != 'exit':
            command = 'tree ' + inp3
            file_name = 'wood_' + inp3[inp3.rfind('/') + 1:]
            tree = subprocess.Popen(command.split(), stdout=subprocess.PIPE).communicate()[0].decode()
            if 'no such file or directory' == tree:
                print(inp3, 'The directory does not exist!')
            elif inp3 == 'exit':
                print('The directory does not exist!')
                break
            else:
                with open(file_name, 'w') as file:
                    file.write(tree)


task3 = Task3()
if args.system:
    task3.system()
elif args.chmod:
    task3.chmod()
elif args.tree:
    task3.tree()
else:
    parser.print_help()