import requests as rq
from bs4 import BeautifulSoup as bS
from colorama import Fore as F

styles = []
colors = {'green': '\033[32m', 'orange': '\033[33m', 'blue': '\033[34m', 'purple': '\033[35m', 'cyan': '\033[36m',
          'yellow': '\033[93m', 'lightblue': '\033[94m', 'pink': '\033[95m', 'lightcyan': '\033[96m'}
print(r'''
  _______                 _           ______ _  _____ _      _   
 |__   __|               | |         |  ____(_)/ ____| |    | |  
    | |_      _____ _ __ | |_ _   _  | |__   _| |  __| | ___| |_ 
    | \ \ /\ / / _ \ '_ \| __| | | | |  __| | | | |_ | |/ _ \ __|
    | |\ V  V /  __/ | | | |_| |_| | | |    | | |__| | |  __/ |_ 
    |_| \_/\_/ \___|_| |_|\__|\__, | |_|    |_|\_____|_|\___|\__|
                               __/ |                             
                              |___/                             ''')


def get_page_data(link):
    """Парсинг всех существующих шрифтов сервиса"""
    html = rq.get(link)
    soup = bS(html.text, 'html.parser')
    res = soup.find('div',
                    style="float:left;font-size:9pt;margin:2px;padding:2px;overflow:auto;height:500px;line-height:24px;").find_all(
        'a')
    for r in res:
        styles.append(str(r).split('href="')[1].split('.html')[0].title())


def menu(by_num, lim):
    """Вывод меню"""
    for x in range(0, len(styles[:lim]), by_num):
        if x + by_num > len(styles):
            by_num = len(styles) - x

        template = ' | '.join(['{:>3} - {:20}'] * by_num)
        print(template.format(*[j for i in zip(range(x + 1, x + 1 + by_num), styles[x:x + by_num]) for j in i]))
    print(f'{lim + (lim % 2) + 1:>3} - {"All Items":21}| {0:>3} - Exit')


def post(url, txt):
    """Отправка запроса и парсинг ответа"""
    payload = {'text': txt}
    ro = rq.post(url, payload)
    output = ro.content.decode("utf-8").split('max-width:650px;">')[1].split('</pre>')[0]
    color = input("\nColor the text? Y / N ")
    if color.upper() == 'Y':
        for i, v in enumerate(colors.keys()):
            print(f'{i + 1} --- {v}')
        while (color_number := int(input('\nWhich color? '))) not in range(len(colors.keys()) + 1):
            print('Choose a right color!!!\n')
            continue
        else:
            return f'{colors[list(colors.keys())[color_number - 1]] + output}{F.RESET}'
    else:
        return output


def action():
    """Выполнение с задаваемыми переменными"""
    while True:
        try:
            design = int(input('\nSelect a design number: '))
        except ValueError:
            print('\nPlease enter a number within the options!\n')
        except Exception as e:
            print(f'ERROR --- {e}')
        else:
            while design not in range(1, limit + (limit % 2) + 1):
                if design == 0:
                    print('\n\tBye bye!\n')
                    raise SystemExit
                elif design == limit + (limit % 2) + 1:
                    text = input('Enter text: ')
                    for i in styles[:limit - 1]:
                        with open('all_design.txt', 'a', encoding='utf-8') as file:
                            file.write(f"\n{i}:\n{post(url=f'{topster}{i}.html', txt=text)}")
                    print('\nDone!\n')
                else:
                    print('\nPlease enter a number within the options!\n')
                    design = int(input('\nSelect a design number: '))
            else:
                text = input('Enter text: ')
                print(post(url=f'{topster}{styles[design - 1]}.html', txt=text))
                saving = input('\nSave to file? Y / N ')
                if saving.upper() == 'Y':
                    filename = f'{styles[design - 1]}.txt'
                    with open(filename, 'a') as output_file:
                        output_file.write(post(url=f'{topster}{styles[design - 1]}.html', txt=text))
                else:
                    continue


if __name__ == '__main__':
    topster = 'https://www.topster.de/text-to-ascii/'
    get_page_data(topster)
    limit = len(styles)
    menu(3, limit)
    action()
